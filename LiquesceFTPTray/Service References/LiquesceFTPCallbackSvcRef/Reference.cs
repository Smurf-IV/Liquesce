//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LiquesceFTPTray.LiquesceFTPCallbackSvcRef {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiquesceFTPSvcState", Namespace="http://schemas.datacontract.org/2004/07/LiquesceFTPFacade")]
    public enum LiquesceFTPSvcState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InError = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InWarning = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stopped = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LiquesceFTPCallbackSvcRef.ILiquesceFTPCallBack", CallbackContract=typeof(LiquesceFTPTray.LiquesceFTPCallbackSvcRef.ILiquesceFTPCallBackCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ILiquesceFTPCallBack {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiquesceFTPCallBack/Subscribe")]
        void Subscribe(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiquesceFTPCallBack/Unsubscribe")]
        void Unsubscribe(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiquesceFTPCallBackCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiquesceFTPCallBack/Update")]
        void Update(LiquesceFTPFacade.LiquesceFTPSvcState state, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiquesceFTPCallBackChannel : LiquesceFTPTray.LiquesceFTPCallbackSvcRef.ILiquesceFTPCallBack, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LiquesceFTPCallBackClient : System.ServiceModel.DuplexClientBase<LiquesceFTPTray.LiquesceFTPCallbackSvcRef.ILiquesceFTPCallBack>, LiquesceFTPTray.LiquesceFTPCallbackSvcRef.ILiquesceFTPCallBack {
        
        public LiquesceFTPCallBackClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LiquesceFTPCallBackClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LiquesceFTPCallBackClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LiquesceFTPCallBackClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LiquesceFTPCallBackClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe(System.Guid id) {
            base.Channel.Subscribe(id);
        }
        
        public void Unsubscribe(System.Guid id) {
            base.Channel.Unsubscribe(id);
        }
    }
}
