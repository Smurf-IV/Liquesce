version 1.0.158.0
========================================================================================
* bug fix: fragmented responses in the resposne monitor thread
* added thread locking to prevent multiple read issues on the SslStream when negoiating the connection
* bug fix: exception handling error message
* improved how the last FTP response is added to FtpExceptions
* improved buffering in the response monitor thread 
* bug fix: monitor thread not shutting down properly in some cases
* bug fix: bytes transferred incorrectly shows a size of zero for file tranfers due to transfer even firing a second time after transfer completed
* bug fix: incorrectly using IPv6 for active transfers on machines that have an IPv6 and IPv4 addresses.  Change code to only use first IPv4 address that is available.
* added support for implicit SSL/TLS connections.  Broke existing enum interface to make naming consistent (sorry!).
* added new CharacterEncoding property so user can set customer character encoding preference.  Defaults to UTF-8.
* bug fix: added better error control to handle the exception "System.ObjectDisposedException: Cannot access a disposed object" thrown when calling FtpClient.Close() in some cases.  
* bug fix: FtpClient.Exists returns false for file in root directory


version 1.0.151.0
========================================================================================
* re-released library with GetFileSize() method change included


version 1.0.150.0
========================================================================================

* added additional custom exception objects for specific exception events for better exception flow control
	* FtpConnectionBrokenException
	* FtpConnectionClosedException
	* FtpDataTransferException
	* FtpAsynchronousOperationException
	* FtpCommandResponseTimeoutException
	* FtpDataCompressionException
	* FtpDataConnectionException
	* FtpSecureConnectionException
	* FtpCertificateValidationException
	* FtpDataConnectionTimeoutException
	* FtpConnectionOpenException
	* FtpProxyException
	* FtpResponseException

* changed FtpClient.GetFileSize() method now returns a long (Int64) instead of and int (Int32) to support massive file sizes
* bug fix: in the FtpClient.GetFileSize() method fixed where file size parsed incorrectly for some FTP servers.  File size now parsed correctly.
* bug fix: Unhandled Exception: System.ObjectDisposedException: Cannot access a disposed object.  Thanks to Ignor Azizov for reporting this one!  Bug fixed in FtpBase class IsConnected property by checking if Socket already has been closed prior to transmitting data.
* bug fix: on ASP400 system response code sent for quote command was not expected.  Updated quote response codes to accept response code 250 as a valid return code for Quote().  Many thanks to Jason Williams for reporting this one.
* fixed bug with FtpClient.ChangeDirectoryUp() method where the CDUP command was not waiting for the correct response code
* added FtpClient.ChangeDirectoryMultiPath() which handles legacy FTP servers that are unable to issue CWD commands when the path contains multiple directories such as /pub/user/smith or if there is a space in the directory name such as /pub/user/john smith.  A CWD command is issued for each directory in the path unlike the ChangeDirectory method which only issues one CWD command containing the full path.  This new method works reliably on all FTP server implementation.
* bug fix: in FtpClient.Exists().  Method now reliably tests for existence of either a file or a directory on a remote FTP server.  This method also has been updated to return to the existing directory properly as well as work on FTP servers that cannot handle multiple path commands such as /pub/user/smith.
* updated comments concerning different FTP server support for full path FTP command operations.
* improved the speed at which broken connections are detected allowing for connection closed event to be executed much faster
