//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LiquesceTray.ILiquesceCallback {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ILiquesceCallback.ILiquesce", CallbackContract=typeof(LiquesceTray.ILiquesceCallback.ILiquesceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ILiquesce {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiquesce/Stop")]
        void Stop();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiquesce/Start")]
        void Start();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiquesce/get_State", ReplyAction="http://tempuri.org/ILiquesce/get_StateResponse")]
        LiquesceFaçade.LiquesceSvcState get_State();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiquesce/Subscribe")]
        void Subscribe(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiquesce/Unsubscribe")]
        void Unsubscribe(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiquesce/get_ConfigDetails", ReplyAction="http://tempuri.org/ILiquesce/get_ConfigDetailsResponse")]
        LiquesceFaçade.ConfigDetails get_ConfigDetails();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiquesce/set_ConfigDetails")]
        void set_ConfigDetails(LiquesceFaçade.ConfigDetails value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiquesceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiquesce/Update")]
        void Update(LiquesceFaçade.LiquesceSvcState state, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiquesceChannel : LiquesceTray.ILiquesceCallback.ILiquesce, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LiquesceClient : System.ServiceModel.DuplexClientBase<LiquesceTray.ILiquesceCallback.ILiquesce>, LiquesceTray.ILiquesceCallback.ILiquesce {
        
        public LiquesceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LiquesceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LiquesceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LiquesceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LiquesceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Stop() {
            base.Channel.Stop();
        }
        
        public void Start() {
            base.Channel.Start();
        }
        
        public LiquesceFaçade.LiquesceSvcState get_State() {
            return base.Channel.get_State();
        }
        
        public void Subscribe(System.Guid id) {
            base.Channel.Subscribe(id);
        }
        
        public void Unsubscribe(System.Guid id) {
            base.Channel.Unsubscribe(id);
        }
        
        public LiquesceFaçade.ConfigDetails get_ConfigDetails() {
            return base.Channel.get_ConfigDetails();
        }
        
        public void set_ConfigDetails(LiquesceFaçade.ConfigDetails value) {
            base.Channel.set_ConfigDetails(value);
        }
    }
}
